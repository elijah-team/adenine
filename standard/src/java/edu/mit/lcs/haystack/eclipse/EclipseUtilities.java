/*
 * Created on Nov 9, 2003
 */
package edu.mit.lcs.haystack.eclipse;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.io.StringWriter;

import org.eclipse.jface.dialogs.MessageDialog;

import edu.mit.lcs.haystack.adenine.compilers.ICompiler;
import edu.mit.lcs.haystack.adenine.compilers.rdfCode.RDFCodeCompiler;
import edu.mit.lcs.haystack.ozone.core.Context;
import edu.mit.lcs.haystack.ozone.core.OzoneConstants;
import edu.mit.lcs.haystack.rdf.IRDFContainer;

/**
 * @author Dennis Quan
 */
public class EclipseUtilities {
	public static void compileAdenine(InputStream is, IRDFContainer target, Context context) {
		ICompiler		compiler = new RDFCodeCompiler(target);
		String error = null;
		try {
			java.util.List 	errors = compiler.compile(null, new InputStreamReader(is), "<generated by adenine converter>", null, null);
			
			if (!errors.isEmpty()) {
				error = errors.toString();
			}
		} catch (Exception e) {
			StringWriter sw = new StringWriter();
			e.printStackTrace(new PrintWriter(sw));
			error = sw.toString();
		}
		
		if (error != null) {
			IEclipseSite ec = (IEclipseSite) context.getProperty(OzoneConstants.s_browserWindow);
			MessageDialog.openInformation(ec.getSite().getShell(), "Adenine Compiler Error", error);
		}
	}
}
