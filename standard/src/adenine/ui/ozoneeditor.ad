# Copyright (c) 1998-2003 Massachusetts Institute of Technology. 
# This code was developed as part of the Haystack research project 
# (http://haystack.lcs.mit.edu/). Permission is hereby granted, 
# free of charge, to any person obtaining a copy of this software 
# and associated documentation files (the "Software"), to deal in 
# the Software without restriction, including without limitation 
# the rights to use, copy, modify, merge, publish, distribute, 
# sublicense, and/or sell copies of the Software, and to permit 
# persons to whom the Software is furnished to do so, subject to 
# the following conditions: 
# 
# The above copyright notice and this permission notice shall be 
# included in all copies or substantial portions of the Software. 
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, 
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND 
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT 
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, 
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING 
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR 
# OTHER DEALINGS IN THE SOFTWARE. 
#

# Ozone Editor Ontology
# Written by Dennis Quan
# $Header: /home/stefano/haystack/src/adenine/ui/ozoneeditor.ad,v 1.24 2004/05/15 15:18:58 dquan Exp $

@base <http://haystack.lcs.mit.edu/ui/ozoneeditor>

@prefix	dc:				<http://purl.org/dc/elements/1.1/>
@prefix	hs:				<http://haystack.lcs.mit.edu/schemata/haystack#>
@prefix	ozone:			<http://haystack.lcs.mit.edu/schemata/ozone#>
@prefix	editor:			<http://haystack.lcs.mit.edu/ui/ozoneeditor#>
@prefix	slide:			<http://haystack.lcs.mit.edu/schemata/ozoneslide#>
@prefix	data:			<http://haystack.lcs.mit.edu/schemata/dataProvider#>
@prefix	lensui:			<http://haystack.lcs.mit.edu/ui/lens#>
@prefix op:				<http://haystack.lcs.mit.edu/schemata/operation#>
@prefix	summary:		<http://haystack.lcs.mit.edu/ui/summaryView#> 
@prefix	viewContainer:	<http://haystack.lcs.mit.edu/ui/viewContainer#> 
@prefix	content:		<http://haystack.lcs.mit.edu/schemata/content#> 
@prefix	contextMenu:	<http://haystack.lcs.mit.edu/ui/contextMenu#> 

#############################################################################################
# Standard editors

add {
	content:Content		hs:classView			editor:TextView

	editor:textEditorPart		rdf:type				ozone:ViewPart ;
								rdf:type				ozone:Part ;
								rdf:type				ozone:SWTPart ;
								rdf:type				ozone:RawViewPart ;
								ozone:viewDomain		editor:TextView ;
								hs:javaImplementation	${ rdf:type hs:JavaClass ; hs:className "edu.mit.lcs.haystack.ozone.standard.editor.TextEditorPart" }

	editor:literalEditorPart	rdf:type				ozone:Part ;
								rdf:type				ozone:SWTPart ;
								dc:title				"Property editor" ;
								ozone:dataDomain		editor:LiteralEditor ;
								hs:javaImplementation	${ rdf:type hs:JavaClass ; hs:className "edu.mit.lcs.haystack.ozone.standard.editor.LiteralEditorPart" }

	editor:titleBasedResourceEditorPart	
								rdf:type				ozone:Part ;
								rdf:type				ozone:SWTPart ;
								ozone:dataDomain		editor:TitleBasedResourceEditor ;
								hs:javaImplementation	${ rdf:type hs:JavaClass ; hs:className "edu.mit.lcs.haystack.ozone.standard.editor.TitleBasedResourceEditorPart" }

	editor:uniquePropertyEditorPart	
								rdf:type				ozone:Part ;
								rdf:type				ozone:SWTPart ;
								ozone:dataDomain		editor:UniquePropertyEditor ;
								hs:javaImplementation	${ rdf:type hs:JavaClass ; hs:className "edu.mit.lcs.haystack.ozone.standard.editor.UniquePropertyEditorPart" }

	editor:packageGraphEditorPart		rdf:type		ozone:ViewPart ;
								rdf:type				ozone:Part ;
								rdf:type				ozone:SWTPart ;
								ozone:viewDomain		editor:PackageGraphView ;
								hs:javaImplementation	${ rdf:type hs:JavaClass ; hs:className "edu.mit.lcs.haystack.ozone.parts.editor.PackageGraphEditorPart" }

	hs:Package					hs:classView			editor:PackageGraphView

	editor:adenineEditorPart	rdf:type				ozone:ViewPart ;
								rdf:type				ozone:Part ;
								rdf:type				ozone:SWTPart ;
								rdf:type				ozone:InteractiveViewPart ;
								ozone:viewDomain		editor:AdenineView ;
								viewContainer:toolbarCaption "Show in code editor" ;
								hs:javaImplementation	${ rdf:type hs:JavaClass ; hs:className "edu.mit.lcs.haystack.ozone.standard.editor.AdenineEditorPart" }
}

add { editor:clickHereToCreate
	rdf:type	slide:Slide ;
	slide:child ${
		rdf:type		slide:Text ;
		slide:text		"None specified; click here to add" ;
		slide:color		"50%" ;
		ozone:onClick	:onAdd
	}
}

method :onAdd
	= subject (lensui:getUnderlying)
	= predicate (data:getUnderlying)

	with __target__ __infosource__
		replace subject predicate ?x ""

#############################################################################################
# Delete literal property operation

add { editor:literalEditorPartData
	contextMenu:contextOperation	:deleteAssertion
}

method :deleteAssertion ;
rdf:type	op:Operation ;
dc:title	"Delete" ;
summary:titleSlide ${
	rdf:type slide:Span ;
	slide:children @(
		${	rdf:type	slide:Text ;
			slide:text	"Delete property"
		}
	)
}
	= literalEditor (__context__.getProperty editor:literalEditor)
	with __target__ __infosource__
		remove (lensui:getUnderlying) (data:getUnderlying) (literalEditor.getValue)
