# Copyright (c) 1998-2003 Massachusetts Institute of Technology. 
# This code was developed as part of the Haystack research project 
# (http://haystack.lcs.mit.edu/). Permission is hereby granted, 
# free of charge, to any person obtaining a copy of this software 
# and associated documentation files (the "Software"), to deal in 
# the Software without restriction, including without limitation 
# the rights to use, copy, modify, merge, publish, distribute, 
# sublicense, and/or sell copies of the Software, and to permit 
# persons to whom the Software is furnished to do so, subject to 
# the following conditions: 
# 
# The above copyright notice and this permission notice shall be 
# included in all copies or substantial portions of the Software. 
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, 
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND 
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT 
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, 
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING 
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR 
# OTHER DEALINGS IN THE SOFTWARE. 
#

# Constructor ontology
# Written by Dennis Quan
# $Header: /h/haystack/cvsroot/haystack/src/adenine/schemata/constructor.ad,v 1.4 2002/10/20 23:01:06 dquan Exp $

@base <http://haystack.lcs.mit.edu/schemata/constructor>

@prefix	dc:			<http://purl.org/dc/elements/1.1/>
@prefix	:			<http://haystack.lcs.mit.edu/schemata/constructor#>

#############################################################################################
# Constructor

add { :Constructor
	rdf:type				rdfs:Class ;
	rdf:type		daml:Class ;
	rdfs:label		"Constructor" ;
	rdfs:subClassOf	adenine:Method ;
	rdfs:comment	"Provides a mechanism for constructing a resource."
}

add { :targetType
	rdf:type		daml:ObjectProperty ;
	rdfs:label		"Target type" ;
	rdfs:domain		:Constructor ;
	rdfs:range		rdfs:Class
}

add { :defaultConstructor
	rdf:type		daml:DatatypeProperty;
	rdf:type		daml:UniqueProperty;
	rdfs:label		"Default Constructor" ;
	dc:description	"Specifies whether the method being used as a constructor can be used as a default \
	constructor that takes no arguments, and returns a new reource representing an instance of the target type \
	object initalized to appropriate default values";
	rdfs:domain		:Constructor ;
	rdfs:range		xsd:boolean;
	rdfs:isDefinedBy	^
}

#############################################################################################
# Asynchronous constructor

add { :AsynchronousConstructor
	rdf:type			rdfs:Class ;
	rdfs:isDefinedBy	^ ;
	rdf:type			daml:Class ;
	rdfs:label			"Asynchronous Constructor" ;
	rdfs:subClassOf		:Constructor
}


