# Copyright (c) 1998-2003 Massachusetts Institute of Technology. 
# This code was developed as part of the Haystack research project 
# (http://haystack.lcs.mit.edu/). Permission is hereby granted, 
# free of charge, to any person obtaining a copy of this software 
# and associated documentation files (the "Software"), to deal in 
# the Software without restriction, including without limitation 
# the rights to use, copy, modify, merge, publish, distribute, 
# sublicense, and/or sell copies of the Software, and to permit 
# persons to whom the Software is furnished to do so, subject to 
# the following conditions: 
# 
# The above copyright notice and this permission notice shall be 
# included in all copies or substantial portions of the Software. 
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, 
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND 
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT 
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, 
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING 
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR 
# OTHER DEALINGS IN THE SOFTWARE. 
#

# View Ontology Web Language
# Written by Dennis Quan
# $Header: /home/stefano/haystack/src/adenine/schemata/vowl.ad,v 1.1 2004/05/15 15:19:00 dquan Exp $

@base <http://haystack.lcs.mit.edu/schemata/vowl>

@prefix	dc:			<http://purl.org/dc/elements/1.1/> 
@prefix	hs:			<http://haystack.lcs.mit.edu/schemata/haystack#> 
@prefix	ozone:		<http://haystack.lcs.mit.edu/schemata/ozone#> 
@prefix	data:		<http://haystack.lcs.mit.edu/schemata/dataProvider#>
@prefix	summary:	<http://haystack.lcs.mit.edu/ui/summaryView#> 
@prefix	metadata:	<http://haystack.lcs.mit.edu/ui/metadataEditor#> 
@prefix	task:		<http://haystack.lcs.mit.edu/schemata/task#> 
@prefix	lensui:		<http://haystack.lcs.mit.edu/ui/lens#>
@prefix	vowl:		<http://haystack.lcs.mit.edu/schemata/vowl#>

#############################################################################################
# Title

add { vowl:titleSourcePredicate
	rdfs:label			"Title source predicate" ;
	rdf:type			daml:ObjectProperty ;
	rdf:type			rdf:Property ;
	rdfs:domain			rdfs:Class ;
	rdfs:range			daml:DatatypeProperty ;
	rdfs:isDefinedBy	^
}

#############################################################################################
# Lens

add { vowl:Lens
	rdfs:isDefinedBy	^ ;
	rdf:type			rdfs:Class ;
	rdf:type			daml:Class ;
	rdfs:label			"Lens"
}

add { vowl:hasLens
	rdfs:isDefinedBy	^ ;
	rdf:type			daml:ObjectProperty ;
	rdf:type			hs:ProprietalProperty ;
	rdfs:label			"Classwide lens" ;
	rdfs:domain			rdfs:Class ;
	rdfs:range			vowl:Lens
}

add { vowl:appletAspect
	rdf:type	daml:ObjectProperty ;
	rdf:type	hs:ProprietalProperty ;
	rdfs:label	"Classwide applet lens" ;
	rdfs:domain	rdfs:Class ;
	rdfs:range	vowl:Lens
}

add { vowl:objectSpecificAspect
	rdf:type	daml:ObjectProperty ;
	rdf:type	hs:ProprietalProperty ;
	rdfs:label	"Has lens" ;
	rdfs:range	:Lens
}

add { vowl:domain
	rdf:type	daml:ObjectProperty ;
	rdf:type	hs:RelationalProperty ;
	rdfs:label	"Works with class" ;
	rdfs:domain	vowl:Lens ;
	rdfs:range	rdfs:Class
}

add { vowl:forContext
	rdf:type	daml:ObjectProperty ;
	rdf:type	hs:RelationalProperty ;
	rdfs:label	"Works with context" ;
	rdfs:domain	vowl:Lens ;
	rdfs:range	task:Context
}

add { vowl:allProperties
	rdf:type			metadata:MetadataAspect ;
	dc:title			"All Properties" ;
	metadata:scrollable	"true" ;
	vowl:priority		"y" ;
	metadata:propertiesToDisplay ${
		rdf:type				data:SortingListSource ;
		data:sortCaseSensitive	"false" ;
		data:sortDataSource		${ rdf:type summary:TitleSource } ;
		ozone:dataSource ${
			rdf:type					metadata:PropertiesSetSource ;
			ozone:dataSource			lensui:underlyingSource ;
			metadata:propertyToDisplay	rdf:type ;
			metadata:propertyToDisplay	dc:title
		}
	}
}

add { vowl:standardProperties
	rdf:type			metadata:MetadataAspect ;
	dc:title			"Standard Properties" ;
	vowl:priority		"z" ;
	metadata:scrollable	"true" ;
	metadata:propertiesToDisplay ${
		rdf:type		data:DAMLListSource ;
		data:damlList @(
			rdf:type
			dc:title
			hs:alias
			dc:contributor
			dc:creator
			dc:subject
			dc:description
			dc:date
			dc:type
			dc:format
			dc:language
			dc:relation
			dc:source
			dc:coverage
			dc:rights
		)
	}
}

add { daml:Thing
	vowl:hasLens	vowl:standardProperties ;
	vowl:hasLens	vowl:allProperties
}

