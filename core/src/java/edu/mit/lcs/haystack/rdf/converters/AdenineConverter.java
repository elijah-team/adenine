/* 
 * Copyright (c) 1998-2003 Massachusetts Institute of Technology. 
 * This code was developed as part of the Haystack research project 
 * (http://haystack.lcs.mit.edu/). Permission is hereby granted, 
 * free of charge, to any person obtaining a copy of this software 
 * and associated documentation files (the "Software"), to deal in 
 * the Software without restriction, including without limitation 
 * the rights to use, copy, modify, merge, publish, distribute, 
 * sublicense, and/or sell copies of the Software, and to permit 
 * persons to whom the Software is furnished to do so, subject to 
 * the following conditions: 
 * 
 * The above copyright notice and this permission notice shall be 
 * included in all copies or substantial portions of the Software. 
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, 
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND 
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT 
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, 
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING 
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR 
 * OTHER DEALINGS IN THE SOFTWARE. 
 */

package edu.mit.lcs.haystack.rdf.converters;

import java.io.IOException;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.io.Reader;

import edu.mit.lcs.haystack.adenine.compilers.ICompiler;
import edu.mit.lcs.haystack.adenine.compilers.rdfCode.RDFCodeCompiler;
import edu.mit.lcs.haystack.rdf.IRDFContainer;
import edu.mit.lcs.haystack.rdf.RDFException;
import edu.mit.lcs.haystack.rdf.Resource;
import edu.mit.lcs.haystack.rdf.Utilities;

/**
 * @author Dennis Quan
 */
public class AdenineConverter extends TextParser implements IGenerator {
	/* (non-Javadoc)
	 * @see edu.mit.lcs.haystack.rdf.converters.TextParser#internalParse(java.io.Reader, edu.mit.lcs.haystack.rdf.IRDFContainer)
	 */
	protected Resource internalParse(Reader reader, IRDFContainer target)
		throws RDFException, IOException {
		ICompiler		compiler = new RDFCodeCompiler(target);
		java.util.List 	errors = compiler.compile(null, reader, "<generated by adenine converter>", null, null);
		
		if (!errors.isEmpty()) {
			throw new ConversionException("Adenine error", (Exception) errors.get(0));
		}
		
		return null;
	}

	/**
	 * @see edu.mit.lcs.haystack.rdf.converters.IGenerator#generate(IRDFContainer, OutputStream)
	 */
	public void generate(IRDFContainer source, OutputStream os)
		throws RDFException, IOException {
		Utilities.generateAdenine(source, new OutputStreamWriter(os));
	}

}
